{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ggade04/data-science-bootcamp/blob/main/Eda\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np # linear algebra\n",
        "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
        "from google.colab import files\n",
        "import pandas as pd\n",
        "\n",
        "# Upload dataset.csv from your local machine\n",
        "uploaded = files.upload()\n",
        "\n",
        "# Assuming dataset.csv is the name of the uploaded file\n",
        "filename = '/content/D1_Amazon_kindle_data-v2.csv'\n",
        "\n",
        "# Read the CSV file into a DataFrame\n",
        "data = pd.read_csv(filename)\n",
        "\n",
        "# Display the DataFrame\n",
        "data"
      ],
      "metadata": {
        "id": "vho755BEAEbR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "bAVwErdvNnIW"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Data cleaning"
      ],
      "metadata": {
        "id": "MyEQZFZ_UdOe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Drop row\n",
        "data_cleaned = data.dropna()\n",
        "\n",
        "data_cleaned\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ut8TjAC2UppQ",
        "outputId": "4fa2a7e5-0698-4447-a169-afe17cb3960a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              asin                                              title  \\\n",
              "0       B00TZE87S4  Adult Children of Emotionally Immature Parents...   \n",
              "1       B08WCKY8MB  From Strength to Strength: Finding Success, Ha...   \n",
              "2       B09KPS84CJ  Good Inside: A Guide to Becoming the Parent Yo...   \n",
              "3       B07S7QPG6J             Everything I Know About Love: A Memoir   \n",
              "4       B00N6PEQV0  The Seven Principles for Making Marriage Work:...   \n",
              "...            ...                                                ...   \n",
              "133097  B0C3SJDLK8                                      Anna Karenina   \n",
              "133098  B09DW752Y1  Scary Smart: Scary Smart: The Future of Artifi...   \n",
              "133099  B0CFWHPJTN  The Count of Monte Cristo: The Original Unabri...   \n",
              "133100  B0C1KMFXJC                                      War And Peace   \n",
              "133101  B0BS1KYZB6                                Pride and Prejudice   \n",
              "\n",
              "                   author                    soldBy  \\\n",
              "0       Lindsay C. Gibson   Amazon.com Services LLC   \n",
              "1        Arthur C. Brooks   Penguin Group (USA) LLC   \n",
              "2           Becky Kennedy  HarperCollins Publishers   \n",
              "3          Dolly Alderton  HarperCollins Publishers   \n",
              "4            John Gottman          Random House LLC   \n",
              "...                   ...                       ...   \n",
              "133097        Leo Tolstoy                 De Marque   \n",
              "133098          Mo Gawdat   Amazon.com Services LLC   \n",
              "133099    Alexandre Dumas                 De Marque   \n",
              "133100        Leo Tolstoy                 De Marque   \n",
              "133101        Jane Austen                 De Marque   \n",
              "\n",
              "                                                   imgUrl  \\\n",
              "0       https://m.media-amazon.com/images/I/713KZTsaYp...   \n",
              "1       https://m.media-amazon.com/images/I/A1LZcJFs9E...   \n",
              "2       https://m.media-amazon.com/images/I/71RIWM0sv6...   \n",
              "3       https://m.media-amazon.com/images/I/71QdQpTiKZ...   \n",
              "4       https://m.media-amazon.com/images/I/813o4WOs+w...   \n",
              "...                                                   ...   \n",
              "133097  https://m.media-amazon.com/images/I/61RXEyMctk...   \n",
              "133098  https://m.media-amazon.com/images/I/71tjf6R-Wa...   \n",
              "133099  https://m.media-amazon.com/images/I/71zcCb5Pvu...   \n",
              "133100  https://m.media-amazon.com/images/I/715QpZlzmi...   \n",
              "133101  https://m.media-amazon.com/images/I/81Scutrtj4...   \n",
              "\n",
              "                                  productURL  stars  reviews  price  \\\n",
              "0       https://www.amazon.com/dp/B00TZE87S4    4.8        0   9.99   \n",
              "1       https://www.amazon.com/dp/B08WCKY8MB    4.4        0  16.99   \n",
              "2       https://www.amazon.com/dp/B09KPS84CJ    4.8        0  16.99   \n",
              "3       https://www.amazon.com/dp/B07S7QPG6J    4.2        0   9.95   \n",
              "4       https://www.amazon.com/dp/B00N6PEQV0    4.7        0  13.99   \n",
              "...                                      ...    ...      ...    ...   \n",
              "133097  https://www.amazon.com/dp/B0C3SJDLK8    4.7        0   0.00   \n",
              "133098  https://www.amazon.com/dp/B09DW752Y1    4.4        0   9.99   \n",
              "133099  https://www.amazon.com/dp/B0CFWHPJTN    4.8        0   1.99   \n",
              "133100  https://www.amazon.com/dp/B0C1KMFXJC    4.7        0   0.00   \n",
              "133101  https://www.amazon.com/dp/B0BS1KYZB6    4.7        0   0.00   \n",
              "\n",
              "        isKindleUnlimited  category_id  isBestSeller  isEditorsPick  \\\n",
              "0                   False            6          True          False   \n",
              "1                   False            6         False          False   \n",
              "2                   False            6         False           True   \n",
              "3                    True            6         False           True   \n",
              "4                   False            6         False          False   \n",
              "...                   ...          ...           ...            ...   \n",
              "133097              False           29          True          False   \n",
              "133098              False           29         False          False   \n",
              "133099              False           29          True          False   \n",
              "133100              False           29          True          False   \n",
              "133101              False           29         False          False   \n",
              "\n",
              "        isGoodReadsChoice publishedDate              category_name  \n",
              "0                   False    2015-06-01  Parenting & Relationships  \n",
              "1                   False    2022-02-15  Parenting & Relationships  \n",
              "2                   False    2022-09-13  Parenting & Relationships  \n",
              "3                   False    2020-02-25  Parenting & Relationships  \n",
              "4                   False    2015-05-05  Parenting & Relationships  \n",
              "...                   ...           ...                        ...  \n",
              "133097              False    2023-09-15                 Nonfiction  \n",
              "133098              False    2021-09-30                 Nonfiction  \n",
              "133099              False    2023-09-15                 Nonfiction  \n",
              "133100              False    2023-08-25                 Nonfiction  \n",
              "133101              False    2023-10-01                 Nonfiction  \n",
              "\n",
              "[77800 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0d7f35dc-8e29-405d-ba32-9b5c9d820a66\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>asin</th>\n",
              "      <th>title</th>\n",
              "      <th>author</th>\n",
              "      <th>soldBy</th>\n",
              "      <th>imgUrl</th>\n",
              "      <th>productURL</th>\n",
              "      <th>stars</th>\n",
              "      <th>reviews</th>\n",
              "      <th>price</th>\n",
              "      <th>isKindleUnlimited</th>\n",
              "      <th>category_id</th>\n",
              "      <th>isBestSeller</th>\n",
              "      <th>isEditorsPick</th>\n",
              "      <th>isGoodReadsChoice</th>\n",
              "      <th>publishedDate</th>\n",
              "      <th>category_name</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>B00TZE87S4</td>\n",
              "      <td>Adult Children of Emotionally Immature Parents...</td>\n",
              "      <td>Lindsay C. Gibson</td>\n",
              "      <td>Amazon.com Services LLC</td>\n",
              "      <td>https://m.media-amazon.com/images/I/713KZTsaYp...</td>\n",
              "      <td>https://www.amazon.com/dp/B00TZE87S4</td>\n",
              "      <td>4.8</td>\n",
              "      <td>0</td>\n",
              "      <td>9.99</td>\n",
              "      <td>False</td>\n",
              "      <td>6</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2015-06-01</td>\n",
              "      <td>Parenting &amp; Relationships</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>B08WCKY8MB</td>\n",
              "      <td>From Strength to Strength: Finding Success, Ha...</td>\n",
              "      <td>Arthur C. Brooks</td>\n",
              "      <td>Penguin Group (USA) LLC</td>\n",
              "      <td>https://m.media-amazon.com/images/I/A1LZcJFs9E...</td>\n",
              "      <td>https://www.amazon.com/dp/B08WCKY8MB</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0</td>\n",
              "      <td>16.99</td>\n",
              "      <td>False</td>\n",
              "      <td>6</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>Parenting &amp; Relationships</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>B09KPS84CJ</td>\n",
              "      <td>Good Inside: A Guide to Becoming the Parent Yo...</td>\n",
              "      <td>Becky Kennedy</td>\n",
              "      <td>HarperCollins Publishers</td>\n",
              "      <td>https://m.media-amazon.com/images/I/71RIWM0sv6...</td>\n",
              "      <td>https://www.amazon.com/dp/B09KPS84CJ</td>\n",
              "      <td>4.8</td>\n",
              "      <td>0</td>\n",
              "      <td>16.99</td>\n",
              "      <td>False</td>\n",
              "      <td>6</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>2022-09-13</td>\n",
              "      <td>Parenting &amp; Relationships</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>B07S7QPG6J</td>\n",
              "      <td>Everything I Know About Love: A Memoir</td>\n",
              "      <td>Dolly Alderton</td>\n",
              "      <td>HarperCollins Publishers</td>\n",
              "      <td>https://m.media-amazon.com/images/I/71QdQpTiKZ...</td>\n",
              "      <td>https://www.amazon.com/dp/B07S7QPG6J</td>\n",
              "      <td>4.2</td>\n",
              "      <td>0</td>\n",
              "      <td>9.95</td>\n",
              "      <td>True</td>\n",
              "      <td>6</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>2020-02-25</td>\n",
              "      <td>Parenting &amp; Relationships</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>B00N6PEQV0</td>\n",
              "      <td>The Seven Principles for Making Marriage Work:...</td>\n",
              "      <td>John Gottman</td>\n",
              "      <td>Random House LLC</td>\n",
              "      <td>https://m.media-amazon.com/images/I/813o4WOs+w...</td>\n",
              "      <td>https://www.amazon.com/dp/B00N6PEQV0</td>\n",
              "      <td>4.7</td>\n",
              "      <td>0</td>\n",
              "      <td>13.99</td>\n",
              "      <td>False</td>\n",
              "      <td>6</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2015-05-05</td>\n",
              "      <td>Parenting &amp; Relationships</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133097</th>\n",
              "      <td>B0C3SJDLK8</td>\n",
              "      <td>Anna Karenina</td>\n",
              "      <td>Leo Tolstoy</td>\n",
              "      <td>De Marque</td>\n",
              "      <td>https://m.media-amazon.com/images/I/61RXEyMctk...</td>\n",
              "      <td>https://www.amazon.com/dp/B0C3SJDLK8</td>\n",
              "      <td>4.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>False</td>\n",
              "      <td>29</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2023-09-15</td>\n",
              "      <td>Nonfiction</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133098</th>\n",
              "      <td>B09DW752Y1</td>\n",
              "      <td>Scary Smart: Scary Smart: The Future of Artifi...</td>\n",
              "      <td>Mo Gawdat</td>\n",
              "      <td>Amazon.com Services LLC</td>\n",
              "      <td>https://m.media-amazon.com/images/I/71tjf6R-Wa...</td>\n",
              "      <td>https://www.amazon.com/dp/B09DW752Y1</td>\n",
              "      <td>4.4</td>\n",
              "      <td>0</td>\n",
              "      <td>9.99</td>\n",
              "      <td>False</td>\n",
              "      <td>29</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2021-09-30</td>\n",
              "      <td>Nonfiction</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133099</th>\n",
              "      <td>B0CFWHPJTN</td>\n",
              "      <td>The Count of Monte Cristo: The Original Unabri...</td>\n",
              "      <td>Alexandre Dumas</td>\n",
              "      <td>De Marque</td>\n",
              "      <td>https://m.media-amazon.com/images/I/71zcCb5Pvu...</td>\n",
              "      <td>https://www.amazon.com/dp/B0CFWHPJTN</td>\n",
              "      <td>4.8</td>\n",
              "      <td>0</td>\n",
              "      <td>1.99</td>\n",
              "      <td>False</td>\n",
              "      <td>29</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2023-09-15</td>\n",
              "      <td>Nonfiction</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133100</th>\n",
              "      <td>B0C1KMFXJC</td>\n",
              "      <td>War And Peace</td>\n",
              "      <td>Leo Tolstoy</td>\n",
              "      <td>De Marque</td>\n",
              "      <td>https://m.media-amazon.com/images/I/715QpZlzmi...</td>\n",
              "      <td>https://www.amazon.com/dp/B0C1KMFXJC</td>\n",
              "      <td>4.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>False</td>\n",
              "      <td>29</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2023-08-25</td>\n",
              "      <td>Nonfiction</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133101</th>\n",
              "      <td>B0BS1KYZB6</td>\n",
              "      <td>Pride and Prejudice</td>\n",
              "      <td>Jane Austen</td>\n",
              "      <td>De Marque</td>\n",
              "      <td>https://m.media-amazon.com/images/I/81Scutrtj4...</td>\n",
              "      <td>https://www.amazon.com/dp/B0BS1KYZB6</td>\n",
              "      <td>4.7</td>\n",
              "      <td>0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>False</td>\n",
              "      <td>29</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>2023-10-01</td>\n",
              "      <td>Nonfiction</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>77800 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0d7f35dc-8e29-405d-ba32-9b5c9d820a66')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0d7f35dc-8e29-405d-ba32-9b5c9d820a66 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0d7f35dc-8e29-405d-ba32-9b5c9d820a66');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-20dc3603-f869-4695-9a22-cd80302ca637\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-20dc3603-f869-4695-9a22-cd80302ca637')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-20dc3603-f869-4695-9a22-cd80302ca637 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_cleaned",
              "summary": "{\n  \"name\": \"data_cleaned\",\n  \"rows\": 77800,\n  \"fields\": [\n    {\n      \"column\": \"asin\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"B072M1G8TX\",\n          \"B08R2KX6RD\",\n          \"B0821PDFL2\"\n        ],\n        \"num_unique_values\": 77800,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"title\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"The Moosewood Cookbook: 40th Anniversary Edition\",\n          \"The Parent's Tao Te Ching: Ancient Advice for Modern Parents\",\n          \"Intellectual Property in the New Technological Age 2022 Vol. II Copyrights, Trademarks and State IP Protections\"\n        ],\n        \"num_unique_values\": 77213,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"author\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Kristen Arnett\",\n          \"Madeleine Albright\",\n          \"Walter Carter\"\n        ],\n        \"num_unique_values\": 56254,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"soldBy\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Penguin Random House Australia Pty Ltd\",\n          \"JOHN WILEY AND SONS INC\",\n          \"Simon and Schuster Digital Sales Inc\"\n        ],\n        \"num_unique_values\": 37,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imgUrl\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"https://m.media-amazon.com/images/I/61bfr7q5mvL._AC_UY218_.jpg\",\n          \"https://m.media-amazon.com/images/I/61kYBIsJwkL._AC_UY218_.jpg\",\n          \"https://m.media-amazon.com/images/I/91qcYE3eYaL._AC_UY218_.jpg\"\n        ],\n        \"num_unique_values\": 77696,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"productURL\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"https://www.amazon.com/dp/B072M1G8TX\",\n          \"https://www.amazon.com/dp/B08R2KX6RD\",\n          \"https://www.amazon.com/dp/B0821PDFL2\"\n        ],\n        \"num_unique_values\": 77800,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"stars\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.827681049365762,\n        \"min\": 0.0,\n        \"max\": 5.0,\n        \"samples\": [\n          1.6,\n          1.7,\n          4.6\n        ],\n        \"num_unique_values\": 38,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5087,\n        \"min\": 0,\n        \"max\": 618227,\n        \"samples\": [\n          10969,\n          8980,\n          31\n        ],\n        \"num_unique_values\": 5158,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.330843913795427,\n        \"min\": 0.0,\n        \"max\": 682.0,\n        \"samples\": [\n          34.54,\n          9.56,\n          8.24\n        ],\n        \"num_unique_values\": 4181,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isKindleUnlimited\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"samples\": [\n          true,\n          false\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 1,\n        \"max\": 31,\n        \"samples\": [\n          13,\n          1\n        ],\n        \"num_unique_values\": 30,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isBestSeller\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"samples\": [\n          false,\n          true\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isEditorsPick\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"samples\": [\n          true,\n          false\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"isGoodReadsChoice\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"samples\": [\n          true,\n          false\n        ],\n        \"num_unique_values\": 2,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"publishedDate\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"min\": \"1900-01-01\",\n        \"max\": \"2023-10-17\",\n        \"samples\": [\n          \"2014-11-21\",\n          \"2018-03-10\"\n        ],\n        \"num_unique_values\": 6952,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Medical\",\n          \"Arts & Photo graphy\"\n        ],\n        \"num_unique_values\": 30,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# แสดงข้อมูลหรือตารางสถิติพื้นฐาน\n",
        "data_cleaned.info()\n",
        "\n",
        "# หรือใช้ describe() เพื่อแสดงสถิติพื้นฐาน\n",
        "data_cleaned.describe()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 700
        },
        "id": "m5FijpZlY2I6",
        "outputId": "fc096e4a-a3d1-4475-cc91-5c0af64f4f70"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 77800 entries, 0 to 133101\n",
            "Data columns (total 16 columns):\n",
            " #   Column             Non-Null Count  Dtype  \n",
            "---  ------             --------------  -----  \n",
            " 0   asin               77800 non-null  object \n",
            " 1   title              77800 non-null  object \n",
            " 2   author             77800 non-null  object \n",
            " 3   soldBy             77800 non-null  object \n",
            " 4   imgUrl             77800 non-null  object \n",
            " 5   productURL         77800 non-null  object \n",
            " 6   stars              77800 non-null  float64\n",
            " 7   reviews            77800 non-null  int64  \n",
            " 8   price              77800 non-null  float64\n",
            " 9   isKindleUnlimited  77800 non-null  bool   \n",
            " 10  category_id        77800 non-null  int64  \n",
            " 11  isBestSeller       77800 non-null  bool   \n",
            " 12  isEditorsPick      77800 non-null  bool   \n",
            " 13  isGoodReadsChoice  77800 non-null  bool   \n",
            " 14  publishedDate      77800 non-null  object \n",
            " 15  category_name      77800 non-null  object \n",
            "dtypes: bool(4), float64(2), int64(2), object(8)\n",
            "memory usage: 10.0+ MB\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              stars        reviews         price   category_id\n",
              "count  77800.000000   77800.000000  77800.000000  77800.000000\n",
              "mean       4.371353     648.976530     19.363574     15.155797\n",
              "std        0.827681    5087.894642     26.330844      8.506588\n",
              "min        0.000000       0.000000      0.000000      1.000000\n",
              "25%        4.400000       0.000000      8.990000      9.000000\n",
              "50%        4.500000       0.000000     11.990000     14.000000\n",
              "75%        4.700000     192.000000     17.990000     22.000000\n",
              "max        5.000000  618227.000000    682.000000     31.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-70ede1f3-8948-48cd-8efe-6b0c26fb8025\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>stars</th>\n",
              "      <th>reviews</th>\n",
              "      <th>price</th>\n",
              "      <th>category_id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>77800.000000</td>\n",
              "      <td>77800.000000</td>\n",
              "      <td>77800.000000</td>\n",
              "      <td>77800.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>4.371353</td>\n",
              "      <td>648.976530</td>\n",
              "      <td>19.363574</td>\n",
              "      <td>15.155797</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.827681</td>\n",
              "      <td>5087.894642</td>\n",
              "      <td>26.330844</td>\n",
              "      <td>8.506588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>4.400000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>8.990000</td>\n",
              "      <td>9.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>11.990000</td>\n",
              "      <td>14.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>4.700000</td>\n",
              "      <td>192.000000</td>\n",
              "      <td>17.990000</td>\n",
              "      <td>22.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>5.000000</td>\n",
              "      <td>618227.000000</td>\n",
              "      <td>682.000000</td>\n",
              "      <td>31.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-70ede1f3-8948-48cd-8efe-6b0c26fb8025')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-70ede1f3-8948-48cd-8efe-6b0c26fb8025 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-70ede1f3-8948-48cd-8efe-6b0c26fb8025');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d54574ca-c19c-475b-b5c4-51e7e4794b75\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d54574ca-c19c-475b-b5c4-51e7e4794b75')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d54574ca-c19c-475b-b5c4-51e7e4794b75 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"data_cleaned\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"stars\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27505.251821822585,\n        \"min\": 0.0,\n        \"max\": 77800.0,\n        \"samples\": [\n          4.371353470437018,\n          4.5,\n          77800.0\n        ],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 216032.753006629,\n        \"min\": 0.0,\n        \"max\": 618227.0,\n        \"samples\": [\n          77800.0,\n          648.976529562982,\n          618227.0\n        ],\n        \"num_unique_values\": 6,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27468.726752335486,\n        \"min\": 0.0,\n        \"max\": 77800.0,\n        \"samples\": [\n          19.363574035989718,\n          11.99,\n          77800.0\n        ],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"category_id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 27501.371069860197,\n        \"min\": 1.0,\n        \"max\": 77800.0,\n        \"samples\": [\n          15.155796915167095,\n          14.0,\n          77800.0\n        ],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "# คำนวณค่า Q1, Q3, และ IQR\n",
        "Q1 = data_cleaned['reviews'].quantile(0.25)\n",
        "Q3 = data_cleaned['reviews'].quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "\n",
        "# คำนวณ lower bound และ upper bound\n",
        "lower_bound = Q1 - 1.5 * IQR\n",
        "upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "# กรองข้อมูลที่เป็น outliers\n",
        "outliers = data_cleaned[(data_cleaned['reviews'] < lower_bound) | (data_cleaned['reviews'] > upper_bound)]\n",
        "\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# สร้าง boxplot\n",
        "sns.boxplot(x=data_cleaned['reviews'])\n",
        "\n",
        "# แสดง boxplot\n",
        "plt.show()\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "MQ1XypLn9Z7n",
        "outputId": "e7fc4f65-dc83-4d7b-e943-eefc689236d9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# คำนวณค่า Q1, Q3, และ IQR\n",
        "Q1 = data_cleaned['reviews'].quantile(0.25)\n",
        "Q3 = data_cleaned['reviews'].quantile(0.75)\n",
        "IQR = Q3 - Q1\n",
        "\n",
        "# คำนวณ lower bound และ upper bound\n",
        "lower_bound = Q1 - 1.5 * IQR\n",
        "upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "# กรองข้อมูลที่ไม่เป็น outliers\n",
        "fdata = data_cleaned[(data_cleaned['reviews'] >= lower_bound) & (data_cleaned['reviews'] <= upper_bound)]\n",
        "\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# สร้าง boxplot ของ 'reviews'\n",
        "sns.boxplot(x=fdata['reviews'])\n",
        "\n",
        "# แสดงกราฟ\n",
        "plt.show()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 449
        },
        "id": "pUQcUoAYBVm7",
        "outputId": "ce6f3ccd-32d9-4a91-cba5-8d30ec45346f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "\n",
        "df = pd.DataFrame(data_cleaned)\n",
        "\n",
        "# สร้าง countplot ด้วย Seaborn\n",
        "sns.countplot(x='stars', data=df)\n",
        "# กำหนดระยะแนวแกน x\n",
        "plt.xticks(rotation=90)\n",
        "\n",
        "# เพิ่มป้ายกำกับ\n",
        "plt.title('Countplot of stars')\n",
        "plt.xlabel('Stars')\n",
        "plt.ylabel('Count')\n",
        "\n",
        "# แสดงแผนภูมิ\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 480
        },
        "id": "brHCOd6HasXF",
        "outputId": "332beca6-dfa8-4b09-9c1e-0a904c516585"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}